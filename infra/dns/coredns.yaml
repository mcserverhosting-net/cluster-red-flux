---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns-coredns
  namespace: dns
  labels:
    app.kubernetes.io/name: coredns
data:
  Corefile: |-
    . {
        log
        errors
        health {
            lameduck 5s
        }
        ready
        cache 30
        loop
        reload
        dnssec mcserverhosting.red {
            key file /etc/coredns/keys/Kmcserverhosting-red
        }
        etcd {
            path /skydns
            endpoint http://etcd-coredns-client:2379
            fallthrough
        }
        file /etc/coredns/zone/zone-acme _acme-challenge.mcserverhosting.red
        forward . acme-dns:53
        {
          force_tcp
        }
    }
  zone-acme: |- 
    ;; SOA Record
    mcserverhosting.red.	3600	IN	SOA	mcserverhosting.red. root.mcserverhosting.red. 2034742235 7200 3600 86400 3600
    ;; CNAME Records
    _acme-challenge.mcserverhosting.red.	1	IN	CNAME	d2c70604-17cc-4122-b12e-786b2740d398.mcserverhosting.red.
---
apiVersion: v1
kind: Service
metadata:
  name: coredns-coredns-udp
  namespace: dns
  annotations:
    metallb.universe.tf/allow-shared-ip: "dns"
  labels:
    app.kubernetes.io/name: coredns
spec:
  loadBalancerIP: "51.222.70.240"
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: coredns
  ports:
  - port: 53
    protocol: UDP
    name: udp-53
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "dns"
  name: coredns-coredns-tcp
  namespace: dns
  labels:
    app.kubernetes.io/name: coredns
spec:
  loadBalancerIP: "51.222.70.240"
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: coredns
  ports:
  - port: 53
    protocol: TCP
    name: tcp-53
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns-coredns
  namespace: dns
  labels:
    app.kubernetes.io/name: coredns
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 10%
  selector:
    matchLabels:
      app.kubernetes.io/name: coredns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns
    spec:
      serviceAccountName: default
      containers:
      - name: "coredns"
        image: "coredns/coredns:1.7.0"
        imagePullPolicy: IfNotPresent
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        - name: dnskeys
          mountPath: /etc/coredns/keys
        - name: zone-acme
          mountPath: /etc/coredns/zone
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        ports:
        - containerPort: 53
          protocol: UDP
          name: udp-53
        - containerPort: 53
          protocol: TCP
          name: tcp-53
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
        - name: config-volume
          configMap:
            name: coredns-coredns
            items:
            - key: Corefile
              path: Corefile
        - name: zone-acme
          configMap:
            name: coredns-coredns
            items:
            - key: zone-acme
              path: zone-acme
        - name: dnskeys
          secret:
            secretName: mcserverhosting.red
            defaultMode: 0400